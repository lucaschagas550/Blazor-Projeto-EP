@page "/produtos/novo"
@using Blazor_App_EP.Data
@using Microsoft.EntityFrameworkCore
@using Blazor_App_EP.Components.Produtos
@inject ApplicationDbContext context
@inject NavigationManager NavigationManager

<PageTitle>Novo Produto</PageTitle>

<h1>Novo Produto</h1>

<hr />
<div class="row">
    <div class="col-md-4">

        <EditForm method="post" Model="Produto" OnValidSubmit="AddProdutos" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <div class="mb-3">
                <label for="nome" class="form-label">Nome:</label>
                <InputText id="nome" @bind-Value="Produto.Nome" class="form-control" />
                <ValidationMessage For="() => Produto.Nome" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="descricao" class="form-label">Descricao:</label>
                <InputText id="descricao" @bind-Value="Produto.Descricao" class="form-control" />
                <ValidationMessage For="() => Produto.Descricao" class="text-danger" />
            </div>

            <div class="mb-3">
                <label class="form-label">
                    Categoria:
                    <InputSelect class="form-select" @bind-Value="Produto!.Categoria">
                        <option value="">Selecione uma categoria...</option>
                        @foreach (var categoria in Categorias)
                        {
                            <option value="@categoria">@categoria</option>
                        }
                    </InputSelect>
                </label>
            </div>

            <div class="mb-3">
                <label for="preco" class="form-label">Preco:</label>
                <InputNumber id="preco" @bind-Value="Produto.Preco" class="form-control" />
                <ValidationMessage For="() => Produto.Preco" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="disponivelestoque" class="form-label">DisponivelEstoque:</label>
                <InputCheckbox id="disponivelestoque" @bind-Value="Produto.DisponivelEstoque" class="form-check-input" />
                <ValidationMessage For="() => Produto.DisponivelEstoque" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="datavalidade" class="form-label">DataValidade:</label>
                <InputDate id="datavalidade" @bind-Value="Produto.DataValidade" class="form-control" />
                <ValidationMessage For="() => Produto.DataValidade" class="text-danger" />
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
            <a class="btn btn-warning" href="/produtos">Voltar</a>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private Produtos Produto { get; set; } = new();

    private readonly List<string> Categorias = new() { "Eletrônicos", "Vestuário", "Alimentos" };

    protected override void OnInitialized()
    {
        Produto.DataValidade = DateTime.UtcNow;
    }

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddProdutos()
    {
        context.Produtos.Add(Produto);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/produtos");
    }
}
